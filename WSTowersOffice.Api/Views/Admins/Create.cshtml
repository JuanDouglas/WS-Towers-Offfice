@model WSTowersOffice.Api.Models.LoginModel

@{
    ViewBag.Title = "Create";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <center>
        <div style="width:800px">
            <div class="jumbotron jumbotron-custom jumbotron-fluid jumbotron-rounded">
                <div class="card card-rounded" style="color:#000000">
                    <h2 class="card-header">Login</h2>
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div>
                        @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label" })
                        <div>
                            @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", type = "password", autocomplete = "current-password", autocapitalize = "off" } })
                            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control", type = "password", autocomplete = "current-password", autocapitalize = "off" } })
                            @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                    <div>
                        <button type="submit" value="Create" class="btn btn-custom btn-success btn-admin">Adicionar</button>
                        <button onclick="location.href='/Admins/Manager'" class="btn btn-custom btn-warning btn-admin">Voltar</button>
                    </div>
            </div>
        </div>
    </center>
}