@using WSTowersOffice.Api.Models
@model TeamModel

@{
    ViewBag.Title = "Gerenciar Time";
}

<center><h2>@Model.Name</h2></center>
<table class="table table-hover table-bordered">
    <thead class="thead-dark">
        <tr>
            <th>Profile Image</th>
            <th>Nome</th>
            <th>CPF</th>
            <th>E-mail</th>
            <th>Data de adição</th>
        </tr>

        @foreach (TeamEmployeeModel item in ViewBag.TeamEmployees)
        {
            <tr>
                <td><img width="45px" src="@item.Employee.ProfileImage.ImageUrl" /></td>
                <td>@Html.DisplayFor(modelItem => item.Employee.Name)</td>
                <td>@Html.DisplayFor(modelItem => item.Employee.CPF)</td>
                <td>@Html.DisplayFor(modelItem => item.Employee.Email)</td>
                <td>@Html.DisplayFor(modelItem => item.AddDate)</td>
            </tr>
        }
    </thead>
</table>

<!-- Aux Buttons-->
<button type="button" class="btn btn-outline-primary btn-custom" data-target="#addIconModal" data-toggle="modal">Definir Ícone</button>
<button type="button" class="btn btn-outline-success btn-custom" data-target="#addRoleModal" data-toggle="modal">Adicionar Função</button>
<button type="button" class="btn btn-outline-success btn-custom" data-target="#addUserModal" data-toggle="modal">Adicionar Funcionário</button>

<!-- Modal Set Icon -->
<div class="card">
    <div class="modal" id="addIconModal">
        <!-- Set Icon Modal Header-->
        <div class="modal-header">
            Adicione um ícone ao Time!
        </div>
        @using (Html.BeginForm($"Management/AddIcon/{Model.ID}", "Teams", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            <!-- Set Icon Modal Body -->
            <div class="modal-body">
                <img id="output" class="img-icon border-warning" width="50%" height="50%" src="@ViewBag.ImageLink" style="max-width: 18rem;border-width: 0px;cursor: pointer;" />
                <input required type="file" id="Arquivos" name="Arquivos" multiple onchange="" accept="image/*" />
                <script>
                    var loadFile = function (event) {
                        var output = document.getElementById('output');
                        output.src = URl.createObjectURL(event.targetfiles[0]);
                        output.onload = function () { URL.revokeObjectURL(output.src) }
                    }
                </script>
            </div>

            <!-- Set Icon Modal Footer -->
            <div class="modal-footer">
                <button type="button" class="btn btn-outline-danger add" data-dismiss="modal" style="margin-right: -2.5%;">Continuar aqui</button>
                <input type="submit" name="submit" value="Enviar Arquivo" class="btn btn-outline-success add" />
            </div>
        }
    </div>
</div>

<!-- Modal Add User -->
<div class="modal" id="addUserModal">


    <!-- Header -->
    <div class="modal-header">
        Adicione um Funcionário
    </div>


    <!-- Add user Form -->
    @using (Html.BeginForm($"AddEmployee", "Teams", FormMethod.Post))
    {
        <!-- Add user Modal Body -->
        <div class="modal-body">
            @Html.AntiForgeryToken();
            @Html.Hidden("team_name", (string)ViewBag.TeamName)
            @Html.Hidden("post", Request.Url.AbsoluteUri)
            <div class="form-group">
                <div class="col-md-10">
                    @Html.DropDownList("employee_id", (IEnumerable<SelectListItem>)ViewBag.Employees, new { required = true });
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-10">
                    @Html.DropDownList("role_name", (IEnumerable<SelectListItem>)ViewBag.TeamRoles, new { required = true });
                    <button type="button" class="btn btn-outline-success add" data-target="#addRoleModal" data-toggle="modal" style="margin-right: -2.5%;">Criar Função</button>
                </div>
            </div>

        </div>

        <!-- Add user Modal Footer -->
        <div class="modal-footer">
            <button type="button" class="btn btn-outline-danger add" data-dismiss="modal" style="margin-right: -2.5%;">Continuar aqui</button>
            <input type="submit" value="Adicionar Funcionário" class="btn btn-outline-success add" />
        </div>
    }
</div>

<!-- Modal Add User -->
<div class="modal" id="addRoleModal">

    <!-- Header -->
    <div class="modal-header">
        Adicione um Funcionário
    </div>

    <!-- Add user Form -->
    @using (Html.BeginForm($"CreateRole", "Teams", FormMethod.Post, new { form = "CreateRole" }))
    {
        RoleModel roleModel = new RoleModel();
        <!-- Add user Modal Body -->
        <div class="modal-body">
            @Html.AntiForgeryToken();
            <div class="form-group">
                <div class="col-md-10">
                    <input class="form-control text-box single-line" data-val="true" data-val-length="O campo Description deve ser uma cadeia de caracteres com um comprimento máximo de 0." data-val-length-max="0" name="role_name" placeholder="Nome" required type="text">
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-10">
                    <input class="form-control text-box single-line" data-val="true" data-val-length="O campo Description deve ser uma cadeia de caracteres com um comprimento máximo de 0." data-val-length-max="0" name="role_description" placeholder="Descrição" required type="text">
                </div>
            </div>
            <input type="hidden" value="@Model.Name" name="team_name" />
        </div>

        <!-- Add user Modal Footer -->
        <div class="modal-footer">
            <button type="button" class="btn btn-outline-danger add" data-dismiss="modal" style="margin-right: -2.5%;">Não adicionar</button>
            <input type="submit" class="btn btn-outline-success add" />
        </div>
    }
</div>
@if (ViewBag.ContainEmployee)
{
    <!-- Modal Add User -->
    <div class="modal" id="showEmployeeModal">
        @{
            EmployeeModel employee = ViewBag.Employee;
        }
        <!-- Add user Modal Body -->
        <div class="modal-body">
            <center>
                <div class="card" style="width:400px">

                    <img class="card-img-top img-employee-modal" src="@employee.ProfileImage.ImageUrl" alt="Card image">

                    <div style="text-align: right;">
                        <button type="button" class="btn btn-danger btn-custom btn-rounded" data-dismiss="modal">X</button>
                    </div>
                    <center>
                        <div class="card card-body">
                            <h2 class="btn btn-outline-dark disabled">@employee.Name</h2>

                            <dl class="dl-horizontal">

                                <dd class="btn btn-outline-dark disabled" style="width:19em">
                                    @Html.DisplayFor(model => employee.Email)
                                </dd>

                                <dd class="btn btn-outline-dark disabled">
                                    @Html.DisplayFor(model => employee.CPF)
                                </dd>

                                <dt>
                                    @Html.DisplayNameFor(model => employee.QuantityFamilyPersons)
                                </dt>

                                <dd>
                                    @Html.DisplayFor(model => employee.QuantityFamilyPersons)
                                </dd>

                            </dl>
                            <a href="/Employees/Edit/@employee.ID" class="btn btn-primary">Editar perfil</a>
                        </div>
                    </center>
                </div>
            </center>
        </div>
    </div>

}